1. Отметьте все исключения стандартной библиотеки Python

F - RequestException
T - IndexError
T - ValueError
T - KeyboardInterrupt

2. Какие из методов генерации исключения разрешены в Python?

F - raise None
T - raise ValueError("error")
F - raise "ValueError"
T - raise ValueError

3. Обращение к несуществующему атрибуту экземпляра

F - вернет False
F - вернет None
T - сгенерирует исключение AttributeError
F - сгенерирует исключение KeyError

4. Отметьте верные утверждения про classmethod

F - Метод первым аргументом принимает ссылку на экземпляр класса
F - Метод не принимает дополнительных аргументов кроме указанных программистом
T - К этому методу можно обращаться от экземпляра класса
T - К этому методу можно обращаться от имени класса
T - Метод первым аргументом принимает класс

5. Отметьте верные утверждения про staticmethod

F - Метод первым аргументом принимает ссылку на экземпляр класса
T - К этому методу можно обращаться от экземпляра класса
F - Метод первым аргументом принимает класс
T - Метод не принимает дополнительных аргументов кроме указанных программистом
T - К этому методу можно обращаться от имени класса

6. Для чего используются @property?
F - Чтобы делать методы приватными
F - Чтобы делать атрибуты приватными
T - Чтобы создать вычисляемый атрибут

7. Если имя метода в классе начинается с символа нижнего подчеркивания, например: _get_name

F - если вызвать метод у экземпляра класса, то сгенерируется исключение AttributeError
T - обращаться к методу объекта не рекомендуется, так как метод не считается публичным API класса
F - символ нижнего подчеркивания в начале метода не добавляет никакого дополнительного значения

8. Можно ли использовать экземпляры классов в качестве ключей словаря (dict)?

F - Нет
T - Да

9. Можно ли передавать экземпляр класса как аргумент в функцию?

F - Нет
T - Да

10. Предположим есть базовый класс питомец - Pet и класс наследник - Cat. Отметьте варианты, которые вернут True

T - isinstance(Cat(), Pet)
F - issubclass(Pet, Cat)
T - isinstance(Cat(), Cat)
T - issubclass(Cat, object)
T - issubclass(Cat, Pet)